<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Beauhinks.com]]></title>
  <link href="http://beauhinks.com/atom.xml" rel="self"/>
  <link href="http://beauhinks.com/"/>
  <updated>2013-03-09T12:55:29-07:00</updated>
  <id>http://beauhinks.com/</id>
  <author>
    <name><![CDATA[Steven Turner]]></name>
    <email><![CDATA[whathasnotbeenuse@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Migrating from Tumblr to Octopress]]></title>
    <link href="http://beauhinks.com/blog/2013/03/09/migrating-from-tumblr-to-octopress/"/>
    <updated>2013-03-09T12:34:00-07:00</updated>
    <id>http://beauhinks.com/blog/2013/03/09/migrating-from-tumblr-to-octopress</id>
    <content type="html"><![CDATA[<p>Migrating from Tumblr to Octopress. Might be a few issues here and there on the site as I migrate.
For archives visit:
http://beauhinks.tumblr.com/</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Playing with Overtone and Dubstep]]></title>
    <link href="http://beauhinks.com/blog/2013/03/09/playing-with-overtone-and-dubstep/"/>
    <updated>2013-03-09T12:32:00-07:00</updated>
    <id>http://beauhinks.com/blog/2013/03/09/playing-with-overtone-and-dubstep</id>
    <content type="html"><![CDATA[<p>Playing with Overtone in LightTable&#8230;</p>

<p><video width='320' height='160' preload='none' controls poster='http://beauhinks.com.s3.amazonaws.com/images/overtone.mp4-3.png'><source src='http://beauhinks.com.s3.amazonaws.com/video/overtone_dubstep.mp4' type='video/mp4; codecs="avc1.42E01E, mp4a.40.2"'></video></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Simple URL Shortener with Clojure]]></title>
    <link href="http://beauhinks.com/blog/2013/03/09/simple-url-shortener-with-clojure/"/>
    <updated>2013-03-09T12:25:00-07:00</updated>
    <id>http://beauhinks.com/blog/2013/03/09/simple-url-shortener-with-clojure</id>
    <content type="html"><![CDATA[<p>Tinkering more with Clojure and web services.</p>

<p>Here’s the entire application code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='clojure'><span class='line'><span class="p">(</span><span class="kd">ns </span><span class="nv">startingclojure.app</span>
</span><span class='line'>  <span class="p">(</span><span class="ss">:use</span> <span class="p">[</span><span class="nv">clojure.pprint</span><span class="p">]</span> <span class="p">[</span><span class="nv">compojure.core</span><span class="p">]</span> <span class="p">)</span>
</span><span class='line'>  <span class="p">(</span><span class="ss">:require</span>
</span><span class='line'>    <span class="p">[</span><span class="nv">ring.adapter.jetty</span> <span class="ss">:as</span> <span class="nv">jetty</span><span class="p">]</span>
</span><span class='line'>    <span class="p">[</span><span class="nv">ring.util.response</span> <span class="ss">:as</span> <span class="nv">response</span><span class="p">]</span>
</span><span class='line'>    <span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="kd">defonce </span><span class="nv">counter</span> <span class="p">(</span><span class="nf">atom</span> <span class="mi">999</span><span class="p">))</span>
</span><span class='line'><span class="p">(</span><span class="kd">defonce </span><span class="nv">urls</span> <span class="p">(</span><span class="nf">atom</span> <span class="p">{}))</span>
</span><span class='line'><span class="p">(</span><span class="kd">defn </span><span class="nv">shorten</span>
</span><span class='line'>  <span class="p">[</span><span class="nv">url</span><span class="p">]</span>
</span><span class='line'>  <span class="p">(</span><span class="k">let </span><span class="p">[</span><span class="nv">id</span> <span class="p">(</span><span class="nf">swap!</span> <span class="nv">counter</span> <span class="nv">inc</span><span class="p">)</span>
</span><span class='line'>        <span class="nv">id</span> <span class="p">(</span><span class="nf">Long/toString</span> <span class="nv">id</span> <span class="mi">36</span><span class="p">)]</span>
</span><span class='line'>    <span class="p">(</span><span class="nf">swap!</span> <span class="nv">urls</span> <span class="nb">assoc </span><span class="nv">id</span> <span class="nv">url</span><span class="p">)</span>
</span><span class='line'>    <span class="nv">id</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="kd">defn </span><span class="nv">homepage</span>
</span><span class='line'>  <span class="p">[</span><span class="nv">request</span><span class="p">]</span>
</span><span class='line'>  <span class="p">(</span><span class="nb">str </span><span class="err">@</span><span class="nv">urls</span><span class="p">))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="kd">defn </span><span class="nv">redirect</span>
</span><span class='line'>  <span class="p">[</span><span class="nv">id</span><span class="p">]</span>
</span><span class='line'>  <span class="p">(</span><span class="nf">response/redirect</span> <span class="p">(</span><span class="err">@</span><span class="nv">urls</span> <span class="nv">id</span><span class="p">)))</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nf">defroutes</span> <span class="nv">app</span>
</span><span class='line'>  <span class="p">(</span><span class="nf">GET</span> <span class="s">&quot;/&quot;</span> <span class="nv">request</span> <span class="p">(</span><span class="nf">homepage</span> <span class="nv">request</span><span class="p">))</span>
</span><span class='line'>  <span class="p">(</span><span class="nf">GET</span> <span class="s">&quot;/:id&quot;</span> <span class="p">[</span><span class="nv">id</span><span class="p">]</span> <span class="p">(</span><span class="nf">redirect</span> <span class="nv">id</span><span class="p">)))</span>
</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<p>Fire up the app with</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='clojure'><span class='line'><span class="p">(</span><span class="k">def </span><span class="nv">server</span> <span class="p">(</span><span class="nf">jetty/run-jetty</span> <span class="o">#</span><span class="err">’</span><span class="nv">app</span> <span class="p">{</span><span class="ss">:port</span> <span class="mi">8080</span> <span class="ss">:join?</span> <span class="nv">false</span><span class="p">}))</span>
</span></code></pre></td></tr></table></div></figure>


<p>And add some urls:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='clojure'><span class='line'><span class="p">(</span><span class="nf">shorten</span> <span class="err">“</span><span class="nv">http</span><span class="ss">://woot.com</span><span class="err">”</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="p">(</span><span class="nf">shorten</span> <span class="err">“</span><span class="nv">http</span><span class="ss">://logz.beauhinks.com</span><span class="err">”</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Navigate to http://localhost:8080</p>

<p>Try some of the keys…</p>

<p>Fairly incredible how little code there is to perform a redirect and handle routes. Thanks to this video.</p>
]]></content>
  </entry>
  
</feed>
